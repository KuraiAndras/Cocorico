@page "/register"

@using Cocorico.Client.Application.ViewModels.Authentication
@using Cocorico.Shared.Helpers
@using MatBlazor

@layout MainLayout

@inject IRegisterViewModel ViewModel
@inject NavigationManager Navigation

<div class="container">
    <div class="container">
        <div class="row">
            <div class="col-md-4 offset-md-4">
                @if (ViewModel.ShowRegisterFailed)
                {
                    <div class="alert alert-danger">
                        Login attempt failed.
                    </div>
                }
                <EditForm OnValidSubmit="@RegisterUserAsync" Model="@ViewModel.UserRegisterDetails">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <InputText type="text" @bind-Value="@ViewModel.UserRegisterDetails.Name" placeholder="John Doe" class="form-control" />
                    <InputText type="email" @bind-Value="@ViewModel.UserRegisterDetails.Email" placeholder="example@host.org" class="form-control" />
                    <InputText type="password" @bind-Value="@ViewModel.UserRegisterDetails.Password" placeholder="Password" class="form-control" />
                    <InputText type="password" @bind-Value="@ViewModel.UserRegisterDetails.PasswordConfirm" placeholder="Password" class="form-control" />
                    <MatButton type="submit">Register</MatButton>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code
{
    private async Task RegisterUserAsync()
    {
        await ViewModel.RegisterUserAsync();

        if (!ViewModel.ShowRegisterFailed)
        {
            Navigation.NavigateTo(Urls.Client.Login);
        }
    }
}
