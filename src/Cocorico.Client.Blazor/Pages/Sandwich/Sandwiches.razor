@page "/Sandwiches"
@using Cocorico.Client.ViewModels.Order
@using Cocorico.Client.ViewModels.Sandwich
@using Cocorico.Shared.Helpers
@* ReSharper disable once RedundantUsingDirective *@
@using Microsoft.AspNetCore.Components.Authorization
@using Cocorico.Shared.Identity

@inject NavigationManager Navigation
@inject IAddCustomerOrderViewModel OrderViewModel
@inject ISandwichesViewModel ViewModel

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <AuthorizeView Policy="@Policies.Customer">
                <th> </th>
            </AuthorizeView>
            <AuthorizeView Policy="@Policies.Administrator">
                <th> </th>
                <th> </th>
            </AuthorizeView>
        </tr>
    </thead>
    <tbody>
        @foreach (var sandwich in ViewModel.SandwichesList)
        {
            <tr>
                <td>@sandwich.Name</td>
                <td>@sandwich.Price</td>
                <AuthorizeView Policy="@Policies.Customer">
                    <td><MatButton Raised="true" Icon="add_shopping_cart" @onclick="@(() => ViewModel.AddToBasket(sandwich))">Order</MatButton></td>
                </AuthorizeView>
                <AuthorizeView Policy="@Policies.Administrator">
                    <td><MatButton Icon="edit" Raised="true" @onclick="@(() => GotToEdit(sandwich.Id))">Edit</MatButton></td>
                    <td><MatButton Icon="delete_forever" Outlined="true" @onclick="@(async () => await ViewModel.DeleteAsync(sandwich.Id))">Delete</MatButton></td>
                </AuthorizeView>
            </tr>
            @string.Join(", ", sandwich.Ingredients.Select(i => i.Name))
        }
        <tr>
            @if (@OrderViewModel.AddOrderDto.Sandwiches.Count != 0)
            {
                <td>Number of sandwich(es): @OrderViewModel.AddOrderDto.Sandwiches.Count</td>
                <td><MatButton Raised="true" Icon="shopping_cart" @onclick="@Redirect">Go to cart</MatButton></td>
            }
            else
            {
                <td>Currently your cart is empty.</td>
                <td><MatButton Outlined="true" Icon="shopping_cart" @onclick="@Redirect">Visit my cart anyway</MatButton></td>
            }
        </tr>
    </tbody>
</table>



@code
{
    protected override Task OnInitializedAsync() => ViewModel.LoadSandwichesAsync();

    private void Redirect() => Navigation.NavigateTo(Urls.Client.AddCustomerOrder);

    private void GotToEdit(int id) => Navigation.NavigateTo(Urls.Client.Sandwiches + $"/{id}");
}
