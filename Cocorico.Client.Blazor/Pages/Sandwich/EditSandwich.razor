@page "/Sandwiches/{Id:int}"
@using Cocorico.Client.Application.ViewModels.Sandwich
@using Cocorico.Shared.Helpers

@inject IEditSandwichViewModel ViewModel
@inject NavigationManager Navigation

<table class="table">
    <thead>
        <tr>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        <tr><td><input type="text" placeholder="Sandwich Name" class="form-control" @bind="@ViewModel.Sandwich.Name" /></td></tr>
        <tr><td><input type="number" placeholder="Sandwich Price" class="form-control" @bind="@ViewModel.Sandwich.Price" /></td></tr>
        @foreach (var ingredient in ViewModel.AvailableIngredients)
        {
            if (ViewModel.Sandwich.Ingredients.SingleOrDefault(i => i.Id == ingredient.Id) is null)
            {
                <tr><td><MatButton Outlined="true" @onclick="@(() => ViewModel.AddIngredient(ingredient))">@ingredient.Name</MatButton></td></tr>
            }
            else
            {
                <tr><td><MatButton Raised="true" @onclick="@(() => ViewModel.RemoveIngredient(ingredient))">@ingredient.Name</MatButton></td></tr>
            }
        }
        <tr><td><MatButton Raised="true" Icon="save" @onclick="@EditAsync">Save</MatButton></td></tr>
    </tbody>
</table>
@code
{
    [Parameter] public int Id { get; set; }
    protected override Task OnInitializedAsync() => ViewModel.LoadIngredientsAsync(Id);

    private async Task EditAsync()
    {
        var success = await ViewModel.TryEditAsync();

        //TODO: Handle fail
        if (success) Navigation.NavigateTo(Urls.Client.Sandwiches);
    }
}


